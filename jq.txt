jq 読み込み例
headの最後、bodyの最後（使うjsファイルを指定）、jsファイル
<head>
  <meta charset="utf-8">
  <title>Progate</title>
  <link rel="stylesheet" type="text/css" href="stylesheet.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
  <!-- jQueryの読み込み -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
  
</head>
-----------------------------------------------------------------
//</body>の直前でファイル呼び込む
<!-- script.jsの読み込み -->
  <script src="script.js"></script>  
</body>
-----------------------------------------------------------------
script.jsに書く この中
$(function(){

});
-----------------------------------------------------------------
h1タグを消すhide
$(function() {
  // 以下で、hideメソッドを用いて<h1>要素を隠してください
  $('h1').hide();
});
-----------------------------------------------------------------
1.5秒で対象を消す
全体的に
// 以下で、fadeOutメソッドを用いて<img>要素を隠してください
  $('img').fadeOut(1500);
-------------------------------------
下から0秒で対象を消す
// 以下で、slideUpメソッドを用いて<p>要素を隠してください
  $('p').slideUp();
-----------------------------------------------------------------
タグをセレクタ
$('h1')
idをセレクタ
$('#idName')
classをセレクタ
$('.className')
-----------------------------------------------------------------
メソッド
show()
fadeOut()
fadeIn()
fadeIn('slow')

-----------------------------------------------------------------
クリックした時に表示を消す
// 「#hide-text」要素に対するclickイベントを作成してください
  $('#hide-text').click(function(){
    $('#text').slideUp();
  });
-----------------------------------------------------------------
CSSメソッドは、CSSを変更できるメソッドです。1つ目の引数にCSSのプロパティを、
2つ目の引数にプロパティの値をいれます。

$('#text').css('color','red').css('font-size','50px');
-----------------------------------------------------------------
textメソッドを用いることでHTMLそのものを変更することも出来ます。
$('#change-text').text('ようこそ、Progateへ');
>>><div class="btn" id="change-text">ようこそ、Progateへ</div>
-----------------------------------------------------------------
htmlメソッドは、要素の中身のHTMLを書き換えることが出来ます。
textメソッドと違い、htmlメソッドの引数は、単なる文字列ではなくHTMLだということです。
$('#change-html').html('<a href="https://prog-8.com/">ようこそ、Progateへ</a>');
>>><div class="btn" id="change-html">
        <a href="https://prog-8.com/">ようこそ、Progateへ</a>
    </div>

-----------------------------------------------------------------
自分をクリックしたときの処理
// 「.list-item」要素に対するclickイベントを作成してください
  $('.list-item').click(function(){
    $(this).css('color','red');
  });
-----------------------------------------------------------------
変数をつかう
$hensu=$(#idName);
$hensu.css('color','red');
-----------------------------------------------------------------
findメソッドは、すべての子孫要素(自分よりも下の階層の要素すべて）の中から、
指定したセレクタを持つ要素を取得したいときに用います。
下図の例では、<div id="wrapper">から</div>の中にあるすべての<a>要素を取得することができます。
// findメソッドで、「#wrapper」内にあるすべての「a」要素を取得し、
    // cssメソッドで文字の色をredに指定してください
    $('#wrapper').find('a').css('color','red');
-----------------------------------------------------------------
childrenメソッドは、指定したセレクタが持つ子要素（一階層だけ下）
の中から指定したセレクタに合致した要素を取得したいときに用います。
下の例では<div id="wrapper">の子要素は<a>タグと<p>タグが1つずつなので、
<a>タグが1つ取得されます。
// childrenメソッドで、「#wrapper」の一階層下にある「a」要素を取得し、
    // fadeOutメソッドで隠してください
    $('#wrapper').children('a').fadeOut();
-----------------------------------------------------------------

マウスをおいたときの処理 hover
マウス置いたとき、外した時
$('#language-wrapper').hover(
    function(){
      $('.language-text').fadeIn();  
    },
    function(){
      $('.language-text').fadeOut();  
    }
);
-----------------------------------------------------------------
クラスを新たに付け足す
$(this).find('.text-contents').addClass('text-active');
-----------------------------------------------------------------
 // 子要素の「.text-contents」の要素を取得し、text-activeクラスを外してください
      $(this).find('.text-contents').removeClass('text-active');
-----------------------------------------------------------------
そのクラスを持っていればtrue　持っていなければfalse
$(this).hasClass('open');
-----------------------------------------------------------------
新規登録をクリックすると、モーダル表示
モーダルの中の×ボタン押すとモーダル非表示

html
<!-- モーダル部分 --クロースボタンのみ-->
  <div id="signup-modal">
    <div>
      <div id="close-modal">//×ボタン
        <i class="fa fa-2x fa-times"></i>
      </div>
      
    </div>
  </div>
<!-- モーダルを登場させる新規作成ボタン-->
  <div id="#signup-show">新規登録</div>
css
#signup-modal{
  display:none;
}
jQ
$(function(){
  $('#signup-show').click(function(){
    $('#signup-modal').fadeIn();
  });
  
  $('#close-modal').click(function(){
    $('#signup-modal').fadeOut();
  });
});
-----------------------------------------------------------------
css world　ボタン　BUTTON
ボタンを作る
html
<div class="btn">新規登録はこちら</div>
css
//共通のボタン
.btn{
  //ボタンの大きさ文字からのお余裕
  padding: 24px 24px;
  //ボタンに書かれた文字の色
  color: white;
  //背景の色
  background-color: red;
  //ボタンはinline-blockがおすすめblockにすると配置がわけわからん
  //inline-blockは勝手にボタンが中央ぞろえになる
  display: inline-block;
  //ちょっと色を透明にする
  opacity: 0.8;
  border-radius: 4px;
  cursor: pointer;
}
//マウスを上に乗せると透明度が無くなる
.btn:hover {
  opacity: 1;
}
//個々のボタン
.btn-signUp{
}
-----------------------------------------------------------------
CSSWORLD    モーダル

 <!-- モーダル部分 -->
 //全体の背景　この背景の更に上にモーダルを表示
 //画面スクロールしても位置が変わらないようにCSSで調整
 <div class="signup-modal-wrapper">
   //モーダル本体
  <div class="modal">
    <div>
      //アイコン×ボタン
      <i class="fa fa-2x fa-times"></i>
    </div>
    <div id="signup-form">
      <h2>Emailで新規登録</h2>
      <form action="#">
        <input class="form-control" type="text" placeholder="メールアドレス">
        <input class="form-control" type="password" placeholder="パスワード">
        <div id="submit-btn">新規登録</div>
      </form>
    </div>
  </div>
</div>
<!-- モーダルここまで -->

モーダルのCSS
/*モーダル*/
//モーダル全体の背景
.signup-modal-wrapper {
  //画面をスクロールさせても背景位置変わらず
  position: fixed;
  //画面全体を背景にする
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  //背景を透明度0.5にした１にすると真黒
  background-color: rgba(0, 0, 0, 0.5);
  //画面が通常のhtmlより上。数字が大キイほど上に来る
  z-index: 100;
}

.modal {
  //この画面を基準にtop　left決める
  position: absolute;
  top: 20%;
  left: 34%;
  background-color: #e6ecf0;
  padding: 20px 0 40px;
  border-radius: 10px;
  width: 450px;
  height: auto;
  //孫要素h2　div　formを中央寄せ
  text-align: center;
}
//アイコン×ボタン
.fa-times {
  position: absolute;
  top: 12px;
  right: 12px;
  color: rgba(128, 128, 128, 0.46);
  //マウス置いたらマーク変わる
  cursor: pointer;
}

#signup-form {
  width: 100%;
}

#signup-form h2 {
  color: #5f5d60;
  letter-spacing: 1px;
  margin-bottom: 40px;
}

#signup-form input {
  width: 320px;
  margin-bottom: 20px;
  font-size: 12px;
  padding: 12px 12px;
  border: 1px solid #d0d5d8;
  border-radius: 5px;
}

#submit-btn {
  display: inline-block;
  padding: 14px 140px;
  background-color: #5dca88;
  border: none;
  border-radius: 3px;
  color: white;
  margin: 10px auto;
  cursor: pointer;
}
-----------------------------------------------------------------
html　ｃｓｓ
画像アイコン　レッスン一覧を横に２５％づつならべる
画像アイコン４つが横並び　その画像の上にレッスンの名前

画像の下にレッスンの紹介文を書く

html
<!-- レッスン一覧部分 -->
<div class="lesson-wrapper">
  <div class="container">
    <div class="heading">
      <h2>Learn Where to Get Started!</h2>
    </div>
    <div class="lessons">
      <div class="lesson">
        <div class="lesson-icon">
          <img src="https://prog-8.com/images/html/advanced/html.png">
          <p>HTML & CSS</p>
        </div>
        <p class="text-contents">ウェブページの作成に使用される言語です。HTMLとCSSを組み合わせることで、静的なページを作り上げることができます。</p>
      </div>
      <div class="lesson">
        <div class="lesson-icon">
          <img src="https://prog-8.com/images/html/advanced/jQuery.png">
          <p>jQuery</p>
        </div>
        <p class="text-contents">素敵な動きを手軽に実装できるJavaScriptライブラリです。 アニメーション効果をつけたり、Ajax（エイジャックス）を使って外部ファイルを読み込んだりと色々なことができます。</p>
      </div>
      <div class="lesson">
        <div class="lesson-icon">
          <img src="https://prog-8.com/images/html/advanced/ruby.png">
          <p>Ruby</p>
        </div>
        <p class="text-contents">オープンソースの動的なプログラミング言語で、 シンプルさと高い生産性を備えています。大きなWebアプリケーションから小さな日用ツールまで、さまざまなソフトウェアを作ることができます。</p>
      </div>
      <div class="lesson">
        <div class="lesson-icon">
          <img src="https://prog-8.com/images/html/advanced/php.png">
          <p>PHP</p>
        </div>
        <p class="text-contents">HTMLだけではページの内容を変えることはできません。PHPはHTMLにプログラムを埋め込み、それを可能にします。</p>
      </div>
    </div>
  </div>
</div>
<!-- レッスン一覧ここまで -->
css
.lesson {
  float: left;
  width: 25%;
}

.lesson-icon {
  position: relative;
  width: 70%;
  margin: 0 auto;
}

.lesson-icon p {
  position: absolute;
  top: 75px;
  width: 100%;
  color: white;
}

.text-contents {
  margin: 3% auto;
  width: 80%;
  font-size: 12px;
  color: #b3aeb5;
  display:none;
}
//クラスを付け足した場合
//.text-active{
//  display:block;
}
jq
// 言語一覧
  //クラスを付け足した場合
  // $('.lesson').hover(
  //   function(){
  //     $(this).find('.text-contents').addClass('text-active');  
  //   },
  //   function(){
  //     $(this).find('.text-contents').removeClass('text-active');  
  //   }
  // );
   $('.lesson').hover(
    function(){
      $(this).find('.text-contents').css('display','block');  
    },
    function(){
      $(this).find('.text-contents').css('display','none');  
    }

-----------------------------------------------------------------
アコーディオン　中級３
説明文のリストと+ボタンをクリックすると
説明文表示、+ボタンが-になる

html
<ul id="faq-list">
  <li class="faq-list-item">
    <h3 class="question">Progateの公式キャラクターはなんですか？</h3>
    <span>+</span>
    <div class="answer">
      <p>にんじゃわんこといいます。忍者の格好をしたわんこです。ネコではありません。</p>
    </div>
  </li>
  <li class="faq-list-item">
    <h3 class="question">にんじゃわんこはオスですか？それともメスですか？</h3>
    <span>+</span>
    <div class="answer">
      <p>にんじゃわんこはオスです。</p>
    </div>
  </li>
  <li class="faq-list-item">
    <h3 class="question">にんじゃわんこは何歳ですか？</h3>
    <span>+</span>
    <div class="answer">
      <p>にんじゃわんこは14歳です。</p>
    </div>
  </li>
</ul>
css
/*faq wrapper*/
.faq-wrapper {
  background-color: #e6ecf0;
  text-align: center;
  padding-bottom: 80px;
  color: #5f5d60;
}

#faq-list {
  width: 500px;
  margin: 0 auto;
  padding: 0;
  list-style: none;
}

.faq-list-item {
  margin:10px;
  border-bottom:1px solid #ccc;
  position:relative;
  cursor:pointer;
  text-align: left;
}

.faq-list-item h3 {
  font-size: 14px;
}

.faq-list-item span {
  position:absolute;
  top:0;
  right:5px;
  color:#ccc;
  font-size:13px;
}

.answer {
  font-size: 12px;
  padding: 5px 0px;
  margin-bottom: 15px;
  display:none;
}
jq
//FAQ　　アコーディオン
  $('.faq-list-item').click(function() {
    var $answer = $(this).find('.answer');
    if($answer.hasClass('open')){
      $answer.removeClass('open')
      $answer.fadeOut();
      $(this).find('span').text('+');
    }
    else{
      $answer.addClass('open')
      $answer.fadeIn();
      $(this).find('span').text('-');
    }
    
  });
-----------------------------------------------------------------
// FAQのアコーディオン
  $('.faq-list-item').click(function() {
    var $answer = $(this).find('.answer');
    if($answer.hasClass('open')) { 
      $answer.removeClass('open');
      // slideUpメソッドを用いて、$answerを隠してください
      $answer.slideUp();

      // 子要素のspanタグの中身をtextメソッドを用いて書き換えてください
      $(this).find('span').text('+');
      
    } else {
      $answer.addClass('open'); 
      // slideDownメソッドを用いて、$answerを表示してください
      $answer.slideDown();
      
      // 子要素のspanタグの中身をtextメソッドを用いて書き換えてください
      $(this).find('span').text('-');
      
    }
  });
-----------------------------------------------------------------
アイコンの上にホバーしたらクラスを付け足し、画面を表示させる技
ｃｓｓ
.text-contents {
  display:none;
}
.text-active{
  display:block;
}

ｊｑ
$('.lesson').hover(
    function(){
      $(this).find('.text-contents').addClass('text-active');  
    },
    function(){
      $(this).find('.text-contents').removeClass('text-active');  
    }
  );
-----------------------------------------------------------------
eq()メソッド
ｈｔｍｌ
<ul class="slides">
          <li class="slide"><img src="https://s3-ap-northeast-1.jpg"></li>
          <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/rainy.jpg"></li>
          <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/autumn.jpg"></li>
          <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/winter.jpg"></li>
        </ul>
ｊｑ
$('.slide').eq(1).fadeOut();2番目のリスト取得
--------------------
クリックしたインデックス番号を得る技
 $('.slide').click(function() {
    var clickedIndex=$('.slide').index(this);
-----------------------------------------------------------------
1,2,3,4というボタンがあり、それらをクリックするとそれぞれの画像が切り替わる
最初は１の画像がしていされている

html
<div class="slide-wrapper">
  <h2 class="slide-title">にんじゃわんこの一年</h2>
    <ul class="slides">
      <li class="slide active"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/spring.jpg"></li>
      <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/rainy.jpg"></li>
      <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/autumn.jpg"></li>
      <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/winter.jpg"></li>
    </ul>
    <div class="index-btn-wrapper">
      <div class="index-btn">1</div>
      <div class="index-btn">2</div>
      <div class="index-btn">3</div>
      <div class="index-btn">4</div>  
    </div>
</div>
css
.slide {
  /* displayプロパティをnoneにしてください */
  display:none;
  
}
.active {
  /* displayプロパティをblockにしてください */
  display:block;
  
}
jq
$('.index-btn').click(function() {
  $('.active').removeClass('active');
  
  // 変数clickedIndexを定義し、クリックしたボタンのインデックス番号を代入してください
  var clickedIndex=$('.index-btn').index(this);
  
  
  
  // eqの引数をclickedIndexに書き換えてください
  $('.slide').eq(clickedIndex).addClass('active');
-----------------------------------------------------------------
クラスを代入する変数
var $class;
数を代入する変数
var number;
-----------------------------------------------------------------
1つ前、１つ後ろの要素を得る
html
<ul>
  <li>prev</li>
  <li id="center">center</li>
  <li>next</li>
</ul>
jq
$('center').prev().css('color','red');
$('center').next().css('color','blue');

-----------------------------------------------------------------
前　後ろボタンを押すと　4つの画像が切り替わる
html
<div class="slide-wrapper">
  <h2 class="slide-title">にんじゃわんこの一年</h2>
    <div class="change-btn-wrapper">
      <div class="change-btn prev-btn">← 前へ</div>
      <div class="change-btn next-btn">次へ →</div>
    </div>
    <ul class="slides">
      <li class="slide active"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/spring.jpg"></li>
      <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/rainy.jpg"></li>
      <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/autumn.jpg"></li>
      <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/winter.jpg"></li>
    </ul>
    <div class="index-btn-wrapper">
      <div class="index-btn">1</div>
      <div class="index-btn">2</div>
      <div class="index-btn">3</div>
      <div class="index-btn">4</div>  
    </div>
  </div>


-----------------------------------------------------------------

進む、戻るボタンで画像の表示変える
$('.change-btn').click(function() {
    // 変数$displaySlideを定義してください
    var $displaySlide=$('.active');
    
    // 変数$displaySlideからactiveクラスを取り除いてください
    $displaySlide.removeClass('active');
    
    // ifとelseを用いて、$displaySlideの前もしくは次の要素に
    if($(this).hasClass('next-btn')){
      $displaySlide.next().addClass('active');
    }
    else{
      $displaySlide.prev().addClass('active');
    }
    
  });
  
-----------------------------------------------------------------
css warld ボタンを4つ並べる
html
<div class="index-btn-wrapper">
    <div class="index-btn">1</div>
    <div class="index-btn">2</div>
    <div class="index-btn">3</div>
    <div class="index-btn">4</div>  
</div>
css
.index-btn-wrapper {
  font-size: 16px;
  margin-top: 20px;
}

.index-btn {
  display: inline-block;
  color: #4e90af;
  background-color: #e0f5ff;
  width: 40px;
  padding: 6px 0;
  margin: 0 5px;
  border-radius: 3px;
  cursor: pointer;
}

.index-btn:hover {
  color: #fff;
  background-color: #5cabd0;
}
-----------------------------------------------------------------
進む　戻るボタンで
画像を変化させる
１，２，３，４と書かれた4つの番号ボタンで画像を変化させる
１の画像が表示されるときは戻るボタン非表示
４の画像が表示されるときは進むボタン非表示

html
<body>
    <div class="slide-wrapper">
      <h2 class="slide-title">にんじゃわんこの一年</h2>
        <div class="change-btn-wrapper">
          <div class="change-btn prev-btn">← 前へ</div>
          <div class="change-btn next-btn">次へ →</div>
        </div>
        <ul class="slides">
          <li class="slide active"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/spring.jpg"></li>
          <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/rainy.jpg"></li>
          <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/autumn.jpg"></li>
          <li class="slide"><img src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/winter.jpg"></li>
        </ul>
        <div class="index-btn-wrapper">
          <div class="index-btn">1</div>
          <div class="index-btn">2</div>
          <div class="index-btn">3</div>
          <div class="index-btn">4</div>  
        </div>
      </div>
    <script type="text/javascript" src="script.js"></script>
  </body>
css
.prev-btn {
  cursor: pointer;
  float: left;
  /* 初期状態では非表示にしてください */
  display: none; 
 
}
jq
function toggleChangeBtn(){
    var slideIndex = $('.slide').index($('.active'));
    $('.change-btn').show();
    if (slideIndex == 0) {
      $('.prev-btn').hide();
    } else if (slideIndex == $('.slide').length-1) {
      $('.next-btn').hide();
    }
  }
$('.index-btn').click(function() {

  
    $('.active').removeClass('active');
    var clickedIndex = $('.index-btn').index($(this));
    $('.slide').eq(clickedIndex).addClass('active');
    
    toggleChangeBtn();
  });
  
  $('.change-btn').click(function() {
    var $displaySlide = $('.active');
    $displaySlide.removeClass('active');
    if ($(this).hasClass('next-btn')) {
      $displaySlide.next().addClass('active');
    } else {
      $displaySlide.prev().addClass('active');
    }
    toggleChangeBtn();

  });
-----------------------------------------------------------------
タイトルの文字列を取得　タイトルというところに貼り付ける

<h3 id="title">にんじゃわんこについて</h3>
<p class="output-item">タイトル：<span id="title-text"></span></p>

css
.output-wrapper {
  margin-top: 70px;
}

.output-inner {
  padding: 10px 20px;
  margin: 10px 0;
  border: 2px dotted;
  border-radius: 3px;
  width: 100%;
  margin-bottom: 10px;
  font-size: 22px;
}

.output-item {
  margin: 30px;
}

.output-inner span {
  color: #2A374A;
  font-size: 24px;
}



jq
// 変数titleに、「#title」要素のテキストを代入してください
  var title=$('#title').text();
  
  // textメソッドを用いて、「#title-text」要素のテキストを書き換えてください
  $('#title-text').text(title);
-----------------------------------------------------------------
attr
var title = $('#title').text();
  // クラスsection-contentの中のpタグについているidを取得
  var id=$('.section-content p').attr('id');
  //idがlinkのタグのhrefを取得
  var href=$('#link').attr('href');
  
  $('#title-text').text(title);
  // textメソッドを用いて、それぞれ表示してください
  $('#content-id').text(id);
  $('#link-href').text(href);
-----------------------------------------------------------------
formから値を得る　val()使う
var textValue=$('#text-form').val();

$('#form').submit(function(){
     var textValue=$('#text-form').val();
     $('#output-text').text(textValue);
     return false;
});
-----------------------------------------------------------------
selectタグを用いると選択肢式のセレクトボックスを作ることができます。
selectタグとoptionタグからなり、各optionタグが選択肢になります。
下図のように、selectタグはvalメソッドによって、
選択中の値（optionタグのvalue属性の値）を取得できます。

<select id="select-form" class="select-form">
  <!-- 上から順に0,1,2,3のvalue属性をつけてください -->
  <option>選択してください</option>
  <option>1. にんじゃわんこ</option>
  <option>2. ひつじ仙人</option>
  <option>3. ベイビーわんこ</option>
</select>  
-----------------------------------------------------------------
セレクトと組み合わせ　セレクトされた値を得る
form画面で情報送信された時の処理
html
<form id="form" class="form">
          <div class="form-group">
            <div>キャラクター：</div>
            <select id="select-form" class="select-form">
              <!-- 上から順に0,1,2,3のvalue属性をつけてください -->
              <option value='0'>選択してください</option>
              <option value='1'>1. にんじゃわんこ</option>
              <option value='2'>2. ひつじ仙人</option>
              <option value='3'>3. ベイビーわんこ</option>
            </select>  
          </div>
          <div class="form-group">
            <div>理由：</div>
            <textarea id="text-form" class="text-form"></textarea>  
          </div>
          <button type="submit" class="btn btn-submit">送信</button>
        </form>
css

ｊｑ
form画面で情報送信された時の処理
$('#form').submit(function() {
    // 変数selectValueを定義してください。
    var selectValue=$('#select-form').val();
    
    var textValue = $('#text-form').val();
    // 「#output-select」要素のテキストを変数selectValueの値で書き換えてください。
    $('#output-select').text(selectValue);
    
    $('#output-text').text(textValue);
    return false;
  });
-----------------------------------------------------------------
formの理由を入力していなかったら　理由を入力してくださいを表示
入力していたら　その理由を結果に表示
html
<body>
    <div class="container">
      <div class="section-title">
        <h3>キャラクター総選挙</h3>  
      </div>
      <div class="section-content">
        <form id="form" class="form">
          <div class="form-group">
            <div>キャラクター：</div>
            <select id="select-form" class="select-form">
              <option value="0">選択してください</option>
              <option value="1">1. にんじゃわんこ</option>
              <option value="2">2. ひつじ仙人</option>
              <option value="3">3. ベイビーわんこ</option>
            </select>  
          </div>
          <div class="form-group">
            <p id="error-message" class="error-message"></p>
            <div>理由：</div>
            <textarea id="text-form" class="text-form"></textarea>  
          </div>
          <button type="submit" class="btn btn-submit">送信</button>
        </form>
        <div class="output-wrapper">
          <h4>結果</h4>
          <div class="output-inner">
            <p class="output-item">好きなキャラクター：<span id="output-select"></span></p>
            <p class="output-item">理由：<span id="output-text"></span></p>  
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript" src="script.js"></script>
  </body>
css
body {
  font-family: "Hiragino Maru Gothic ProN", sans-serif;
  font-size: 14px;
  color: #888;
}


h2, h3, h4, h5, h6 {
  margin-top: 10px;
  margin-bottom: 10px;
  font-weight: 400;
}

label {
  font-size: 16px;
}

.container {
  width: 720px;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

h3 {
  color: #555;
  padding-top: 50px;
  padding-bottom: 10px;
  text-align: center;
  font-size: 32px;
  font-weight: 300;
}

h3::before, h3::after{
  content: "";
  background-color: #616161;
  display:inline-block;
  width: 40px;
  height: 1px;
  margin: 0 2rem;
  vertical-align: middle;
}

.form .select-form, .form .text-form {
  margin: 0;
  padding: 0 10px;
  border: none;
  color: #202020;
  font-family: 'Open Sans', sans-serif;
  font-size: 16px;
  font-weight: 300;
  padding: 15px;
  background: rgba(0, 0, 0, 0.08);
}

.form-group {
  margin-bottom: 20px;
}

.select-form {
  margin: 10px 0;
  width: 100%;
}

.text-form {
  width: 100%;
  height: 75px;
}

.btn-submit {
  font-family: 'Dosis', sans-serif;
  font-size: 20px;
  background: #5983ff;
  border: 1px solid #5979ff;
  border-radius: 3px;
  color: white;
  padding: 12px 26px;
  cursor: pointer;
}

.output-wrapper h4 {
  font-size: 20px;
  color: rgb(68, 68, 68);
}

.output-inner {
  padding: 10px 20px;
  border: 2px dotted;
  border-radius: 3px;
  margin-bottom: 60px;
}

.output-item {
  font-size: 18px;
  margin: 8px 0px;
}

.error-message {
  color: #F51414;
  height: 20px;
}
jq
$('#form').submit(function() {
  //選択されたキャラを得る
    var selectValue = $('#select-form').val();
    //理由を得る
    var textValue = $('#text-form').val();
    
    // textValueが空のとき、エラー文を表示してください
    if(textValue==''){
      $('#error-message').text('理由を記入してください');
    }
    else if(textValue!=''){
      $('#error-message').text('');
    }
    
    $('#output-select').text(selectValue);
    $('#output-text').text(textValue);
    return false;
  });
-----------------------------------------------------------------
// 「.option-btn」要素のclickイベントをつくってください。
.option-btnをクリックすると、.option-btnの文字列が
#text-formに入力されるようにする

$('.option-btn').click(function(){
  var optionBtn=$(this).text();
  $('#text-form').val(optionBtn+'が好きな理由は、');
});
-----------------------------------------------------------------
divで作ったボタンに　data-option="1"などの属性をつけ
formを変更
html
<p class="call-to-action">好きなキャラクターをクリック！</p>
<div class="option-wrapper">
  <div class="option-group">
    <img class="option-image" src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/progate_baby_wanko.png">
    <div class="option-btn" data-option="1">1. ベイビーわんこ</div>
  </div>
  <div class="option-group">
    <img class="option-image" src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/progate_wanko.png">
    <div class="option-btn" data-option="2">2. にんじゃわんこ</div>
  </div>
  <div class="option-group">
    <img class="option-image" src="https://s3-ap-northeast-1.amazonaws.com/progate/shared/images/lesson/jquery/advanced/progate_hitsuji.png">
    <div class="option-btn" data-option="3">3. ひつじ仙人</div>
  </div>
</div>
<form id="form" class="form">
  <div class="form-group">
    <div>キャラクター：</div>
    <select id="select-form" class="select-form">
      <option value="0">選択してください</option>
      <option value="1">1. ベイビーわんこ</option>
      <option value="2">2. にんじゃわんこ</option>
      <option value="3">3. ひつじ仙人</option>
    </select>  
  </div>
  <div class="form-group">
    <p id="error-message" class="error-message"></p>
    <div>理由：</div>
    <textarea id="text-form" class="text-form"></textarea>  
  </div>
  <button type="submit" class="btn btn-submit">送信</button>
</form>

jq
//.option-btnボタンをクリックすると
$('.option-btn').click(function() {
    var optionText = $(this).text();
    // 変数clickedOptionに、クリックした要素のdata-optionの値を代入してください。
    //ボタンに紐づけられたdata-optionの値を得る
    var clickedOption=$(this).attr('data-option');  
    
    $('#text-form').val(optionText + 'が好きな理由は、');
    // 変数clickedOptionを用いて、「#select-form」の値を自動で入力してください。
    セレクトを指定して、子要素をvalで指定
    $('#select-form').val(clickedOption);
    
  });
-----------------------------------------------------------------
アニメーション
.social-iconの上にマウスを乗せると画像がが大きくなる
html
<a href="https://www.facebook.com/Progate-742679992421539" class="social-icon" target='_blank'>
  <span class="fa fa-facebook"></span>
</a>
<a href="https://twitter.com/progatejp" class="social-icon" target='_blank'>
  <span class="fa fa-twitter"></span>
</a>
css
.social-icon {
  vertical-align: top;
  text-align: center;
  display: inline-block;
  background: rgba(94, 144, 255, 0.75);
  width: 52px;
  height: 52px;
  padding-top: 13px;
  border-radius: 50%;
  color: #e3e3e3;
  font-size: 24px;
  margin: 0 15px;
}
jq
$('.social-icon').hover(
    function(){
      $(this).animate({'font-size':'30px'},300);
    },
    function(){
      $(this).animate({'font-size':'24px'},300);
    }
  );
-----------------------------------------------------------------
ページ内リンク　クリックするとページトップへ移動
// 「#top-btn」をクリックしたときに
  // ページ最上部まで自動でスクロールするようにしてください
  $('#top-btn').click(function(){
    $('html,body').scrollTop(0);
  });
-----------------------------------------------------------------
クリックするとページトップへ0.5秒で移動
$('#top-btn').click(function(){
    // animateメソッドを用いて、
    // アニメーション付きでスクロールするようにしてください。
    $('html, body').animate({
      'scrollTop': 0
    }, 500);
  });
-----------------------------------------------------------------
オブジェクトの距離を得る
例）H1が最上部から180px、左から100pxの距離に或る時

$('h1').offset();     > top 180 left 100 を取得

$('h1').offset().top; > top 180を取得
-----------------------------------------------------------------
ページ内リンク
html
<ul class="header-menu-right">
  <li>
    <a href="#stamps">LINEスタンプ</a>
  </li>
  <li>
    <a href="#interview">インタビュー</a>
  </li>
  <li>
    <a href="#contact">お問い合わせ</a>
  </li>
</ul>

jq
// ヘッダー内の<a>タグをクリックしたときのclickイベントを作成してください。
ヘッダーaをクリックしたら
$('header a').click(function(){
  ページ内リンクhrefがidみたいに使う
  var id=$(this).attr('href');
  ページ上からの距離を得る
  var position=$(id).offset().top;
  
  
  $('html, body').animate({
    'scrollTop': position
  }, 500);
  
});
-----------------------------------------------------------------



-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
-----------------------------------------------------------------
